package Implements;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;

import Interface.BorrowInterface;
import Model.ModelBorrowDetail;

public class BorrowImpl extends UnicastRemoteObject implements BorrowInterface {

	protected BorrowImpl() throws RemoteException {
		super();
		// TODO Auto-generated constructor stub
	}

	@Override
	public int addBorrow(ModelBorrowDetail modelBorrowDetail) throws RemoteException {
		// TODO Auto-generated method stub
		int result = 0;
		Connection connection = ConnectionMuonTraSach.getConnection();
		try {
			String sql = "insert into BorrowDetail values(?, ?, ?, ?, ?, ?, ?)";
			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setString(1, modelBorrowDetail.getBorrowID());
			preparedStatement.setString(2, modelBorrowDetail.getBookID());
			preparedStatement.setString(3, modelBorrowDetail.getStudentID());
			preparedStatement.setString(4, modelBorrowDetail.getExpiredStatus());
			preparedStatement.setString(5, modelBorrowDetail.getReturnStatus());
			preparedStatement.setDate(6, modelBorrowDetail.getBorrowDay());
			preparedStatement.setDate(7, modelBorrowDetail.getReturnDay());
			result = preparedStatement.executeUpdate();
			ConnectionMuonTraSach.closeConnection(connection);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public int removeBorrow(ModelBorrowDetail modelBorrowDetail) throws RemoteException {
		// TODO Auto-generated method stub
		int result = 0;
		try {
			Connection connection = ConnectionMuonTraSach.getConnection();
			String sql = "delete from BorrowDetail where id_borrow = ?";
			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setString(1, modelBorrowDetail.getBorrowID());
			result = preparedStatement.executeUpdate();
			ConnectionMuonTraSach.closeConnection(connection);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public int updateBorrow(ModelBorrowDetail modelBorrowDetail) throws RemoteException {
		// TODO Auto-generated method stub
		int result = 0;
		try {
			if (searchingAuthor(modelAuthor) != null) {
				Connection connection = ConnectionMuonTraSach.getConnection();
				String sql = "update author set name_author =?, country = ?, age = ?, phone = ? where id_author = ?";
				PreparedStatement preparedStatement = connection.prepareStatement(sql);
				preparedStatement.setString(1, modelAuthor.getName());
				preparedStatement.setString(2, modelAuthor.getCountry());
				preparedStatement.setInt(3, modelAuthor.getAge());
				preparedStatement.setString(4, modelAuthor.getPhone());
				preparedStatement.setString(5, modelAuthor.getId());
				result = preparedStatement.executeUpdate();
				ConnectionMuonTraSach.closeConnection(connection);
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public ModelBorrowDetail searchingBorrow(ModelBorrowDetail modelBorrowDetail) throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ArrayList<ModelBorrowDetail> printListBorrow() throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}

}
