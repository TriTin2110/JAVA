package main;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.rmi.Naming;
import java.rmi.registry.LocateRegistry;

import Controller.MainController;
import Implements.MainImp;
import Interface.MainInterface;

public class Server implements ItemListener {

	private ClientMainFrame clientMainFrame;

	public Server(ClientMainFrame clientMainFrame) {
		this.clientMainFrame = clientMainFrame;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try {

			LocateRegistry.createRegistry(1026);
			System.out.println("Server đang chạy");
			while (true) {

			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}

	@Override
	public void itemStateChanged(ItemEvent e) {
		// TODO Auto-generated method stub
		MainController mainController = new MainController();
		String chose = "";
		boolean chosingTable = false;
		if (e.getStateChange() == ItemEvent.SELECTED) {
			chosingTable = false;
			switch (e.getItem().toString()) {
			case "Tác giả":
				chose = "Author";
				chosingTable = true;
				break;

			case "Sinh viên":
				chose = "Student";
				chosingTable = true;
				break;

			case "Sách":
				chose = "Book";
				chosingTable = true;
				break;

			case "Chi tiết mượn":
				chose = "Borrow";
				chosingTable = true;
				break;

			}
			createConnect();
			this.clientMainFrame.tableChosen = chose;
			// Đi đến tạo bảng
			mainController.controllerPeform(this.clientMainFrame, chose);

		}
		if (clientMainFrame != null && !chosingTable) {
			mainController.searchingRecord(this.clientMainFrame, this.clientMainFrame.tableChosen,
					this.clientMainFrame.comboBoxSearching.getSelectedItem().toString());
		}
	}

	public void createConnect() {
		try {
			MainInterface mainInterface = new MainImp();
			Naming.rebind("rmi://localhost:1026/test", mainInterface);
			System.out.println("Đã tạo kết nối đến bảng " + this.clientMainFrame.tableChosen);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
	}

}
